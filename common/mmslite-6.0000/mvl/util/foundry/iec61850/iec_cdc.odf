########################################################################
#Copyright 2003, Systems Integration Specialists Company, Inc.
#               All Rights Reserved
########################################################################
# 02/07/08  RKR  fixed typos and incorporated Integer enumerations per
#		 tissue 120, made SBO Select an ObjectReference per 8-1 table 70
# 01/12/07  JRB  Chg BRCB and URCB DatSet to ObjectReference (Vstring129).
# 10/31/06  JRB  Chg "T" in controls from "EntryTime" to "TimeStamp" for Tissue 35.
# 11/29/04  JRB  Fix spelling of "addInfo" in SEC.
# 09/01/04  JRB  Chg "Select" (used for SBO defs) to VISIBLE_STRING64 to match final 61850-8-1
# 08/20/04  JRB  Chg "Check" from BVstring2 to Bstring2 (fixed len).
# 07/13/04  JRB  Control Model fixes:
#		   Del "OperTA" from all controls (FC=CO).
#		   Del "Cterm" in all "Oper" types.
#		   Chg "Value" in "Oper" & "SBOw" types to "ctlVal" ("setMag" for APC).
#		   Fix APC_SP (contains SBO, SBOw, etc).
#		   Del operTm, origin, ctlNum from all "*_CO" types.
#		   Add operTm, origin, ctlNum to all "Oper" & "SBOw" types.
#		   Make special "Cancel" type for each CDC (SPCCancel, etc).
# 06/24/04  JRB	 Fix BufTm spelling.
# 06/10/04  JRB	 Move RptID before RptEna to match final 61850-7-2.
#		 Chg RptID from VSTR32 to VSTR65.
#		 Chg BRCB SqNum to INT16U to match final 61850-7-2 (URCB SqNum unchanged).
# 03/31/04  JRB  Fix operTm spelling in ACT_CF.
# 12/17/03  JRB  For 61850-8-1 FDIS, chg OptFlds to RTYP_BVSTR10
#		 Add TimeofEntry to IEC_BRCB.
# 12/16/03  JRB  Add SGCB
# 12/11/03  JRB  Fix stVal attr type in INC_ST (INT32)
# 12/09/03  JRB  Fix sboClass attr name (6 places). Fix pulsQty name.
# 11/07/03  JRB  Added rpt.odf
# 09/22/03  JRB  Added IEC_BRCB, IEC_URCB.
# 04/09/03  RKR  Started from 61850-7-3_R7-31_IS_PUB-E.doc

# Derived from Part 7-3 Basic Communication Structure for Substation and
# feeder equipment - Common data classes

":CI", "gentypes.odf"		# Generic Types
":CI", "rpt.odf"		# Need RTYP_* from here

#           | MX | ST | CO | CF | DC | SP | SG | SV | SE | EX |
#           ---------------------------------------------------
#   (SPS)   |    | XX |    |    | XX |    |    | XX |    | XX |
#   (DPS)   |    | XX |    |    | XX |    |    | XX |    | XX |
#   (INS)   |    | XX |    |    | XX |    |    | XX |    | XX |
#   (ACT)   |    | XX |    | XX | XX |    |    |    |    | XX |
#   (ACD)   |    | XX |    |    | XX |    |    |    |    | XX |
#   (SEC)   |    | XX |    |    | XX |    |    |    |    | XX |
#   (BCR)   |    | XX |    | XX | XX |    |    |    |    | XX |
#   (MV)    | XX |    |    | XX | XX |    |    | XX |    | XX |
#   (CMV)   | XX |    |    | XX | XX |    |    | XX |    | XX |
#   (SAV)   | XX |    |    | XX | XX |    |    |    |    | XX |
#   (WYE)   | XX |    |    | XX | XX |    |    | XX |    | XX |
#   (DEL)   | XX |    |    | XX | XX |    |    | XX |    | XX |
#   (SEQ)   | XX |    |    | XX | XX |    |    | XX |    | XX |
#   (HMV)   | XX |    |    | XX | XX |    |    |    |    | XX |
#   (HWYE)  | XX |    |    | XX | XX |    |    |    |    | XX |
#   (HDEL)  | XX |    |    | XX | XX |    |    |    |    | XX |
#   (SPC)   |    | XX | XX | XX | XX |    |    | XX |    | XX |
#   (DPC)   |    | XX | XX | XX | XX |    |    | XX |    | XX |
#   (INC)   |    | XX | XX | XX | XX |    |    | XX |    | XX |
#   (BSC)   |    | XX | XX | XX | XX |    |    | XX |    | XX |
#   (ISC)   |    | XX | XX | XX | XX |    |    | XX |    | XX |
#   (APC)   | XX |    |    | XX | XX | XX |    |    |    | XX |
#   (SPG)   |    |    |    |    | XX | XX | XX |    | XX | XX |
#   (ING)   |    |    |    | XX | XX | XX | XX |    | XX | XX |
#   (ASG)   |    |    |    | XX | XX | XX | XX |    | XX | XX |
#   (CURVE) |    |    |    |    | XX | XX | XX |    | XX | XX |
#   (DPL)   |    |    |    |    | XX |    |    |    |    | XX |
#   (LPL)   |    |    |    |    | XX |    |    |    |    | XX |
#   (CSD)   |    |    |    |    | XX |    |    |    |    | XX |

":T", "ObjectReference",	"Vstring129",	"ObjectReference"

# section 6.3 Analogue value
# f*(10**units.multiplier) = (i*scaleFactor) +offset

":T", "AnalogueValue"
"{
 (i)  			<INT32>,       			#GC_1
 (f)  			<FLOAT32>,     			#GC_1
}", "AnalogueValue"

# section 6.4 Configuration of analogue value

":T", "ScaledValueConfig"
"{
 (scaleFactor) 		<FLOAT32>,     			#M
 (offset) 		<FLOAT32>,     			#M
}", "Configuration of analogue value"

# section 6.5 Range configuration

":T", "RangeConfig"
"{
 (hhLim) 		<AnalogueValue>,		#M
 (hLim) 		<AnalogueValue>,		#M
 (lLim) 		<AnalogueValue>,		#M
 (lILim) 		<AnalogueValue>,		#M
 (min) 			<AnalogueValue>,		#M
 (max)	 		<AnalogueValue>,		#M
}", "Range configuration"

# section 6.6 Step position with transient indication

":T", "ValWithTrans"
"{
 (posVal) 		<INT8>,				#M
 (transInd)   		<BOOLEAN>,			#O
}", "Step position with transient indication"

# section 6.7 Pulse configuration

":T", "PulseConfig"
"{
 (cmdQual) 		<ENUMERATED8>,	 		#M
 (onDur)   		<INT32U>,			#M
 (offDur)   		<INT32U>,			#M
 (numPls)   		<INT32U>,			#M
}", "Pulse configuration"

# section 6.8 Originator

":T", "Originator"
"{
 (orCat) 		<ENUMERATED8>,	 		#M
 (orIdent)  		<OCTET_STRING64>, 		#M
}", "Originator"

# section 6.9 Unit

":T", "Unit"
"{
 (SIUnit) 		<ENUMERATED8>,	 		#M
 (multiplier)  		<ENUMERATED8>,			#O
}", "Unit"

# section 6.10 Vector

":T", "Vector"
"{
 (mag) 			<AnalogueValue>,      		#M
 (ang)  		<AnalogueValue>,     		#O
}", "Vector"

# section 6.11 Point

":T", "Point"
"{
 (xVal) 		<FLOAT32>,      		#M
 (yVal)  		<FLOAT32>,     			#M
}", "Point"

########################################################################
# section 7.3.2 Single point status (SPS)
########################################################################

":T", "SPS_ST"
"{
 (stVal)		<BOOLEAN>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of SPS"

":T", "SPS_SV"
"{
 (subEna)		<BOOLEAN>,			#PICS_SUBST
 (subVal)		<BOOLEAN>,			#PICS_SUBST
 (subQ)			<Quality>,			#PICS_SUBST
 (subID)		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of SPS"

":T", "SPS_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SPS"

":T", "SPS_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SPS"

########################################################################
# section 7.3.3 Double point status (DPS)
########################################################################

":T", "DPS_ST"
"{
 (stVal)		<CODED_ENUM2>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of DPS"

":T", "DPS_SV"
"{
 (subEna)		<BOOLEAN>,			#PICS_SUBST
 (subVal)		<CODED_ENUM2>,			#PICS_SUBST
 (subQ)			<Quality>,			#PICS_SUBST
 (subID)		<VISIBLE_STRING64>, 		#PICS_SUBST
}", "FC=SV of DPS"

":T", "DPS_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of DPS"

":T", "DPS_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of DPS"

########################################################################
# section 7.3.4 Integer status (INS)
########################################################################

":T", "INS_ENUM8_ST"
"{
 (stVal)		<ENUMERATED8>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of INS"

":T", "INS_INT_ST"
"{
 (stVal)		<INT32>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of INS"

":T", "INS_ENUM8_SV"
"{
 (subEna)		<BOOLEAN>,			#PICS_SUBST
 (subVal)		<ENUMERATED8>,			#PICS_SUBST
 (subQ)			<Quality>,			#PICS_SUBST
 (subID)		<VISIBLE_STRING64>, 		#PICS_SUBST
}", "FC=SV of INS"

":T", "INS_INT_SV"
"{
 (subEna)		<BOOLEAN>,			#PICS_SUBST
 (subVal)		<INT32>,			#PICS_SUBST
 (subQ)			<Quality>,			#PICS_SUBST
 (subID)		<VISIBLE_STRING64>, 		#PICS_SUBST
}", "FC=SV of INS"

#
# We originally implemented these as Integers but found need to carry enumerations
#
#":T", "INS_ST"
#"{
# (stVal)		<INT32>,			#M
# (q)			<Quality>,			#M
# (t)			<TimeStamp>,			#M
#}", "FC=ST of INS"
#
#":T", "INS_SV"
#"{
# (subEna)		<BOOLEAN>,			#PICS_SUBST
# (subVal)		<INT32>,			#PICS_SUBST
# (subQ)			<Quality>,			#PICS_SUBST
# (subID)		<VISIBLE_STRING64>, 		#PICS_SUBST
#}", "FC=SV of INS"

":T", "INS_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of INS"

":T", "INS_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of INS"

########################################################################
# section 7.3.5 Protection activation information (ACT)
########################################################################

":T", "ACT_ST"
"{
 (general)		<BOOLEAN>,			#M
 (phsA)			<BOOLEAN>,			#O
 (phsB)			<BOOLEAN>,			#O
 (phsC)			<BOOLEAN>,			#O
 (neut)			<BOOLEAN>,			#O
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of ACT"

":T", "ACT_CF"
"{
 (operTm) 		<TimeStamp>,			#O
}", "FC=CF of ACT"

":T", "ACT_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of ACT"

":T", "ACT_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of ACT"

########################################################################
# section 7.3.6 Directional protection activation information (ACD)
########################################################################

":T", "ACD_ST"
"{
 (general)		<BOOLEAN>,			#M
 (dirGeneral) 		<ENUMERATED8>,			#M
 (phsA)			<BOOLEAN>,			#GC_2(1)
 (dirPhsA) 		<ENUMERATED8>,			#GC_2(1)
 (phsB)			<BOOLEAN>,			#GC_2(2)
 (dirPhsB) 		<ENUMERATED8>,			#GC_2(2)
 (phsC)			<BOOLEAN>,			#GC_2(3)
 (dirPhsC) 		<ENUMERATED8>,			#GC_2(3)
 (neut)			<BOOLEAN>,			#GC_2(4)
 (dirNeut) 		<ENUMERATED8>,			#GC_2(4)
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of ACD"

":T", "ACD_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of ACD"

":T", "ACD_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of ACD"

########################################################################
# section 7.3.7 Security violation counting (SEC)
########################################################################

":T", "SEC_ST"
"{
 (cnt)			<INT32U>,			#M
 (sev)	 		<ENUMERATED8>,			#M
 (t)			<TimeStamp>,			#M
 (addr)			<OCTET_STRING64>,		#O
 (addInfo)	    	<VISIBLE_STRING64>,		#O
}", "FC=ST of SEC"

":T", "SEC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SEC"

":T", "SEC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SEC"

########################################################################
# section 7.3.8 Binary counter reading (BCR)
########################################################################

":T", "BCR_ST"
"{
 (actVal)		<INT128>,			#M
 (frVal)  		<INT128>,			#GC_2(1)
 (frTm)  		<TimeStamp>,			#GC_2(1)
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=ST of BCR"

":T", "BCR_CF"
"{
 (units)		<Unit>,				#O
 (pulsQty)  		<FLOAT32>,			#M
 (frEna)  		<BOOLEAN>,			#GC_2(1)
 (strTm)  		<TimeStamp>,			#GC_2(1)
 (frPd)  		<INT32>,			#GC_2(1)
 (frRs)  		<BOOLEAN>,			#GC_2(1)
}", "FC=CF of BCR"

":T", "BCR_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SEC"

":T", "BCR_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of BCR"

########################################################################
# section 7.4.2 Measured value (MV)
########################################################################

":T", "MV_MX"
"{
 (instMag)		<AnalogueValue>,		#O
 (mag)  		<AnalogueValue>,		#M
 (range)  		<ENUMERATED8>,			#O
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=MX of MV"

":T", "MV_SV"
"{
 (subEna)		<BOOLEAN>,			#PIC_SUBST
 (subMag)		<AnalogueValue>,		#PIC_SUBST
 (subQ)			<Quality>,			#PIC_SUBST
 (subID)  		<VISIBLE_STRING64>,		#PIC_SUBST
}", "FC=SV of MV"

":T", "MV_CF"
"{
 (units)		<Unit>,				#O
 (db)			<INT32U>,			#O
 (zeroDb) 		<INT32U>,			#O
 (sVC) 			<ScaledValueConfig>,		#AC_SCAV
 (rangeC)  		<RangeConfig>,			#GC_CON
 (smpRate)  		<INT32U>,			#O
}", "FC=CF of MV"

":T", "MV_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of MV"

":T", "MV_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of MV"

########################################################################
# section 7.4.3 Complex measured value (CMV)
########################################################################

":T", "CMV_MX"
"{
 (instCVal)		<Vector>,			#O
 (cVal)  		<Vector>,			#M
 (range)  		<ENUMERATED8>,			#O
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=MX of CMV"

":T", "CMV_SV"
"{
 (subEna)		<BOOLEAN>,			#PIC_SUBST
 (subCVal)		<Vector>,			#PIC_SUBST
 (subQ)			<Quality>,			#PIC_SUBST
 (subID)  		<VISIBLE_STRING64>,		#PIC_SUBST
}", "FC=SV of CMV"

":T", "CMV_CF"
"{
 (units)		<Unit>,				#O
 (db)			<INT32U>,			#O
 (zeroDb) 		<INT32U>,			#O
 (rangeC) 		<RangeConfig>,			#GC_CON
 (magSVC) 		<ScaledValueConfig>,		#AC_SCAV
 (angSVC) 		<ScaledValueConfig>,		#AC_SCAV
 (angRef) 		<ENUMERATED8>,			#O
 (smpRate) 		<INT32U>,			#O
}", "FC=CF of CMV"

":T", "CMV_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of CMV"

":T", "CMV_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of CMV"

########################################################################
# section 7.4.4 Sampled Value (SAV)
########################################################################

":T", "SAV_MX"
"{
 (instMag)		<AnalogueValue>,		#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#O
}", "FC=MX of SAV"

":T", "SAV_CF"
"{
 (units)		<Unit>,				#O
 (sVC)	 		<ScaledValueConfig>,		#AC_SCAV
 (min)	 		<AnalogueValue>,		#O
 (max)	 		<AnalogueValue>,		#O
}", "FC=CF of SAV"

":T", "SAV_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SAV"

":T", "SAV_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SAV"

########################################################################
# section 7.4.5 Phase to ground related measurement values of a three
# 		phase system (WYE)
########################################################################

":T", "WYE_MX"
"{
 (phsA)			<CMV_MX>,			#GC_1
 (phsB)			<CMV_MX>,			#GC_1
 (phsC)			<CMV_MX>,			#GC_1
 (neut)			<CMV_MX>,			#GC_1
 (net)			<CMV_MX>,			#GC_1
 (res)			<CMV_MX>,			#GC_1
}", "FC=MX of WYE"

":T", "WYE_SV"
"{
 (phsA)			<CMV_SV>,			#GC_1
 (phsB)			<CMV_SV>,			#GC_1
 (phsC)			<CMV_SV>,			#GC_1
 (neut)			<CMV_SV>,			#GC_1
 (net)			<CMV_SV>,			#GC_1
 (res)			<CMV_SV>,			#GC_1
}", "FC=SV of WYE"

":T", "WYE_CF"
"{
 (phsA)			<CMV_CF>,			#GC_1
 (phsB)			<CMV_CF>,			#GC_1
 (phsC)			<CMV_CF>,			#GC_1
 (neut)			<CMV_CF>,			#GC_1
 (net)			<CMV_CF>,			#GC_1
 (res)			<CMV_CF>,			#GC_1
 (angRef)		<ENUMERATED8>,			#O
}", "FC=CF of WYE"

":T", "WYE_DC"
"{
 (phsA)			<CMV_DC>,			#GC_1
 (phsB)			<CMV_DC>,			#GC_1
 (phsC)			<CMV_DC>,			#GC_1
 (neut)			<CMV_DC>,			#GC_1
 (net)			<CMV_DC>,			#GC_1
 (res)			<CMV_DC>,			#GC_1
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of WYE"

":T", "WYE_EX"
"{
 (phsA)			<CMV_EX>,			#GC_1
 (phsB)			<CMV_EX>,			#GC_1
 (phsC)			<CMV_EX>,			#GC_1
 (neut)			<CMV_EX>,			#GC_1
 (net)			<CMV_EX>,			#GC_1
 (res)			<CMV_EX>,			#GC_1
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of WYE"

########################################################################
# section 7.4.6 Phase to ground related measured values of a three
# 		phase systemDelta (DEL)
########################################################################

":T", "DEL_MX"
"{
 (phsAB)		<CMV_MX>,			#GC_1
 (phsBC)		<CMV_MX>,			#GC_1
 (phsCA)		<CMV_MX>,			#GC_1
}", "FC=MX of DEL"

":T", "DEL_SV"
"{
 (phsAB)		<CMV_SV>,			#GC_1
 (phsBC)		<CMV_SV>,			#GC_1
 (phsCA)		<CMV_SV>,			#GC_1
}", "FC=SV of DEL"

":T", "DEL_CF"
"{
 (phsAB)		<CMV_CF>,			#GC_1
 (phsBC)		<CMV_CF>,			#GC_1
 (phsCA)		<CMV_CF>,			#GC_1
 (angRef)		<ENUMERATED8>,			#O
}", "FC=CF of DEL"

":T", "DEL_DC"
"{
 (phsAB)		<CMV_DC>,			#GC_1
 (phsBC)		<CMV_DC>,			#GC_1
 (phsCA)		<CMV_DC>,			#GC_1
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of DEL"

":T", "DEL_EX"
"{
 (phsAB)		<CMV_EX>,			#GC_1
 (phsBC)		<CMV_EX>,			#GC_1
 (phsCA)		<CMV_EX>,			#GC_1
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of DEL"

########################################################################
# section 7.4.7 Sequence (SEQ)
########################################################################

":T", "SEQ_MX"
"{
 (c1)			<CMV_MX>,			#M
 (c2)			<CMV_MX>,			#M
 (c3)			<CMV_MX>,			#M
 (seqT)			<ENUMERATED8>,			#M
}", "FC=MX of SEQ"

":T", "SEQ_SV"
"{
 (c1)			<CMV_SV>,			#M
 (c2)			<CMV_SV>,			#M
 (c3)			<CMV_SV>,			#M
}", "FC=SV of SEQ"

":T", "SEQ_CF"
"{
 (c1)			<CMV_CF>,			#M
 (c2)			<CMV_CF>,			#M
 (c3)			<CMV_CF>,			#M
 (phsRef) 		<ENUMERATED8>,			#O
}", "FC=CF of SEQ"

":T", "SEQ_DC"
"{
 (c1)			<CMV_CF>,			#M
 (c2)			<CMV_CF>,			#M
 (c3)			<CMV_CF>,			#M
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SEQ"

":T", "SEQ_EX"
"{
 (c1)		<CMV_EX>,				#GC_1
 (c2)		<CMV_EX>,				#GC_1
 (c3)		<CMV_EX>,				#GC_1
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SEQ"

########################################################################
# section 7.4.8 Harmonic Value (HMV)
########################################################################
#
# Set the upper bounds(numHar) of VectorHMV based on hardware capability
#
":T", "VectorHMV"     	"[16:<Vector>]",  "ARRAY[0..numHar] OF Vector"

":T", "HMV_MX"
"{
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (har)			<VectorHMV>,			#M
}", "FC=MX of HMV"

":T", "HMV_CF"
"{
 (numHar)    		<INT16U>,			#M
 (numCyc) 		<INT16U>,			#M
 (evalTm) 		<INT16U>,			#M
 (units) 		<Unit>,				#O
 (smpRate) 		<INT32U>,			#O
 (frequency)		<FLOAT32>,			#M
 (hvRef)		<ENUMERATED8>,			#O
 (rmsCyc)		<INT16U>,			#AC_RMS_M
}", "FC=CF of HMV"

":T", "HMV_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of HMV"

":T", "HMV_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of HMV"

########################################################################
# section 7.4.9 Harmonic value for WYE (HWYE)
########################################################################
#
# Set the upper bounds(numHar) of VectorHWYE based on hardware capability
#
":T", "VectorHWYE"     	"[16:<Vector>]",  "ARRAY[0..numHar] OF Vector"

":T", "HWYE_MX"
"{
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (phsAHar) 		<VectorHWYE>,			#M
 (phsBHar) 		<VectorHWYE>,			#O
 (phsCHar) 		<VectorHWYE>,			#O
 (neutHar) 		<VectorHWYE>,			#O
 (netHar) 		<VectorHWYE>,			#O
 (resHar) 		<VectorHWYE>,			#O
}", "FC=MX of HWYE"

":T", "HWYE_CF"
"{
 (numHar)    		<INT16U>,			#M
 (numCyc) 		<INT16U>,			#M
 (evalTm) 		<INT16U>,			#M
 (units) 		<Unit>,				#O
 (angRef) 		<ENUMERATED8>,			#O
 (smpRate) 		<INT32U>,			#O
 (frequency)		<FLOAT32>,			#M
 (hvRef)		<ENUMERATED8>,			#O
 (rmsCyc)		<INT16U>,			#AC_RMS_M
}", "FC=CF of HWYE"

":T", "HWYE_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of HWYE"

":T", "HWYE_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of HWYE"

########################################################################
# section 7.4.10 Harmonic value for DEL (HDEL)
########################################################################
#
# Set the upper bounds(numHar) of VectorHDEL based on hardware capability
#
":T", "VectorHDEL"     	"[16:<Vector>]",  "ARRAY[0..numHar] OF Vector"

":T", "HDEL_MX"
"{
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (phsABHar) 		<VectorHDEL>,			#M
 (phsBCHar) 		<VectorHDEL>,			#O
 (phsCAHar) 		<VectorHDEL>,			#O
}", "FC=MX of HDEL"

":T", "HDEL_CF"
"{
 (numHar)    		<INT16U>,			#M
 (numCyc) 		<INT16U>,			#M
 (evalTm) 		<INT16U>,			#M
 (units) 		<Unit>,				#O
 (angRef) 		<ENUMERATED8>,			#O
 (smpRate) 		<INT32U>,			#O
 (frequency)		<FLOAT32>,			#M
 (hvRef)		<ENUMERATED8>,			#O
 (rmsCyc)		<INT16U>,			#AC_RMS_M
}", "FC=CF of HDEL"

":T", "HDEL_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of HDEL"

":T", "HDEL_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of HDEL"

########################################################################
# section 7.5.2 Controllable single point (SPC)
########################################################################
":T", "Select"     	"<ObjectReference>",  "read response contains ACSI Name of Control"
":T", "TestStatus"     	"<BOOLEAN>",    "no-test(FALSE) test(TRUE)"
#
#
":T", "Check"     	"BVstring2", 	 "7.2 section 17.5.2.5"
#
# 7.3 section 6.12
# ENUMERATED ctlModels ::= (status-only |
#                           direct-with-normal-security |
#                           sbo-with-normal-security |
#                           direct-with-enhanced-security |
#                           sbo-with-enhanced-security)
#
":T", "CtlModels"     	"<ENUMERATED8>",  "7.3 section 6.12"

# 7.3 section 6.13
# ENUMERATED SboClasses ::= (operate-once |
#                            operate-many)
#
":T", "SboClasses"     	"<ENUMERATED8>",  "7.3 section 6.13"

":T", "SPCSelectWithValue"     				#
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "SPCOperate"
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "SPCCancel"
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "SPC_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<SPCSelectWithValue>, 		#
 (Oper) 		<SPCOperate>,	 		#
 (Cancel)		<SPCCancel>,		     	#
}", "FC=CO of SPC"

":T", "SPC_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (stVal)		<BOOLEAN>,			#AC_ST
 (q)			<Quality>,			#AC_ST
 (t)			<TimeStamp>,			#AC_ST
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of SPC"

":T", "SPC_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<BOOLEAN>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of SPC"

":T", "SPC_CF"
"{
 (pulseConfig) 		<PulseConfig>,			#AC_CO_O
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
}", "FC=CF of SPC"

":T", "SPC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SPC"

":T", "SPC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SPC"

########################################################################
# section 7.5.3 Controllable double point (DPC)
########################################################################

":T", "DPCSelectWithValue"     				#
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "DPCOperate"
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "DPCCancel"
"{
 (ctlVal)  		<BOOLEAN>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "DPC_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<DPCSelectWithValue>, 		#
 (Oper) 		<DPCOperate>,	 		#
 (Cancel)		<DPCCancel>,		     	#
}", "FC=CO of DPC"

":T", "DPC_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (stVal) 		<CODED_ENUM2>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of DPC"

":T", "DPC_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<CODED_ENUM2>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of DPC"

":T", "DPC_CF"
"{
 (pulseConfig) 		<PulseConfig>,			#AC_CO_O
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
}", "FC=CF of DPC"

":T", "DPC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of DPC"

":T", "DPC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of DPC"

########################################################################
# section 7.5.4 Controllable integer status (INC)
########################################################################


":T", "INC_ENUM8_SelectWithValue"     		       	#
"{
 (ctlVal)  		<ENUMERATED8>,  	       	#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "INC_INT_SelectWithValue"     		       	#
"{
 (ctlVal)  		<INT32>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "INC_ENUM8_Operate"
"{
 (ctlVal)  		<ENUMERATED8>, 			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "INC_INT_Operate"
"{
 (ctlVal)  		<INT32>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "INC_ENUM8_Cancel"
"{
 (ctlVal)  		<ENUMERATED8>,  		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "INC_INT_Cancel"
"{
 (ctlVal)  		<INT32>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "INC_ENUM8_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<INC_ENUM8_SelectWithValue>, 		#
 (Oper) 		<INC_ENUM8_Operate>,	 		#
 (Cancel)		<INC_ENUM8_Cancel>,		     	#
}", "FC=CO of INC"

":T", "INC_INT_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<INC_INT_SelectWithValue>, 		#
 (Oper) 		<INC_INT_Operate>,	 		#
 (Cancel)		<INC_INT_Cancel>,		     	#
}", "FC=CO of INC"

":T", "INC_ENUM8_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (stVal) 		<ENUMERATED8>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of INC"

":T", "INC_INT_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (stVal) 		<INT32>,			#M
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of INC"

":T", "INC_ENUM8_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<ENUMERATED8>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of INC"

":T", "INC_INT_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<INT32>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of INC"

":T", "INC_ENUM8_CF"
"{
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
 (minVal) 		<ENUMERATED8>,			#O
 (maxVal) 		<ENUMERATED8>,			#O
 (stepSize) 		<INT32U>,			#O
}", "FC=CF of INC"

":T", "INC_INT_CF"
"{
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
 (minVal) 		<INT32>,			#O
 (maxVal) 		<INT32>,			#O
 (stepSize) 		<INT32U>,			#O
}", "FC=CF of INC"

":T", "INC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of INC"

":T", "INC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of INC"

########################################################################
# section 7.5.5 Binary controlled step position information (BSC)
########################################################################

":T", "BSCSelectWithValue"     				#
"{
 (ctlVal)  		<CODED_ENUM2>,  		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "BSCOperate"
"{
 (ctlVal)  		<CODED_ENUM2>,  		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "BSCCancel"
"{
 (ctlVal)  		<CODED_ENUM2>,  		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "BSC_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<BSCSelectWithValue>, 		#
 (Oper) 		<BSCOperate>,	 		#
 (Cancel)		<BSCCancel>,		     	#
}", "FC=CO of BSC"

":T", "BSC_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (valWTr) 		<ValWithTrans>,			#AC_ST
 (q)			<Quality>,			#AC_ST
 (t)			<TimeStamp>,			#AC_ST
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of BSC"

":T", "BSC_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<ValWithTrans>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of BSC"

":T", "BSC_CF"
"{
 (persistent) 		<BOOLEAN>,			#M
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
 (minVal) 		<INT8>,				#O
 (maxVal) 		<INT8>,				#O
 (stepSize) 		<INT8U>,			#O
}", "FC=CF of BSC"

":T", "BSC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of BSC"

":T", "BSC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of BSC"

########################################################################
# section 7.5.6 Integer controlled step position information (ISC)
########################################################################

":T", "ISCSelectWithValue"     				#
"{
 (ctlVal)  		<INT8>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "ISCOperate"
"{
 (ctlVal)  		<INT8>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "ISCCancel"
"{
 (ctlVal)  		<INT8>,  			#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "ISC_CO"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<ISCSelectWithValue>, 		#
 (Oper) 		<ISCOperate>,	 		#
 (Cancel)		<ISCCancel>,		     	#
}", "FC=CO of ISC"

":T", "ISC_ST"
"{
 (origin) 		<Originator>,			#AC_CO_O
 (ctlNum) 		<INT8U>,			#AC_CO_O
 (valWTr) 		<ValWithTrans>,			#AC_ST
 (q)			<Quality>,			#AC_ST
 (t)			<TimeStamp>,			#AC_ST
 (stSeld) 		<BOOLEAN>,			#AC_CO_O
}", "FC=ST of BSC"

":T", "ISC_SV"
"{
 (subEna) 		<BOOLEAN>,			#PICS_SUBST
 (subVal) 		<ValWithTrans>,			#PICS_SUBST
 (subQ) 		<Quality>,			#PICS_SUBST
 (subID) 		<VISIBLE_STRING64>,		#PICS_SUBST
}", "FC=SV of ISC"

":T", "ISC_CF"
"{
 (ctlModel) 		<CtlModels>,			#M
 (sboTimeout) 		<INT32U>,			#AC_CO_O
 (sboClass) 		<SboClasses>,			#AC_CO_O
 (minVal) 		<INT8>,				#O
 (maxVal) 		<INT8>,				#O
 (stepSize) 		<INT8U>,			#O
}", "FC=CF of ISC"

":T", "ISC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of ISC"

":T", "ISC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of ISC"

########################################################################
# section 7.6.2 Controllable analogue set point information (APC)
########################################################################

":T", "APCSelectWithValue"     				#
"{
 (setMag) 		<AnalogueValue>, 		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters"

":T", "APCOperate"
"{
 (setMag) 		<AnalogueValue>, 		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
 (Check) 		<Check>,  			#
}", "receives service parameters and control values"

":T", "APCCancel"
"{
 (setMag) 		<AnalogueValue>, 		#M (from base CDC)
 (operTm) 		<TimeStamp>,			#AC_CO_TA_E_M
 (origin) 		<Originator>,			#M
 (ctlNum) 		<INT8U>,			#M
 (T)			<TimeStamp>,  			#
 (Test)			<TestStatus>,  			#
}", ""

":T", "APC_MX"
"{
 (setMag) 		<AnalogueValue>, 		#M
 (origin) 		<Originator>,			#O
 (q)			<Quality>,			#M
 (t)			<TimeStamp>,			#M
}", "FC=MX of APC"

":T", "APC_SP"
"{
# Definition in 61850-8-1 overrides definition in 61850-7-3
 (SBO) 			<Select>,			#
 (SBOw) 		<APCSelectWithValue>, 		#
 (Oper) 		<APCOperate>,	 		#
 (Cancel)		<APCCancel>,		     	#
}", "FC=SP of APC"

":T", "APC_CF"
"{
 (ctlModel) 		<CtlModels>,			#M
 (units) 		<Unit>,				#O
 (sVC) 			<ScaledValueConfig>,		#AC_SCAV
 (minVal) 		<AnalogueValue>, 		#O
 (maxVal) 		<AnalogueValue>, 		#O
 (stepSize) 		<AnalogueValue>,		#O
}", "FC=CF of APC"

":T", "APC_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of APC"

":T", "APC_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of APC"

########################################################################
# section 7.7.2 Single point setting (SPG)
########################################################################

":T", "SPG_SP"
"{
 (setVal)		<BOOLEAN>,	  		#AC_NSG_M
}", "FC=SP of SPG"

":T", "SPG_SG"
"{
 (setVal)		<BOOLEAN>,	  		#AC_SG_M
}", "FC=SG of SPG"

":T", "SPG_SE"
"{
 (setVal)		<BOOLEAN>,	  		#AC_SG_M
}", "FC=SE of SPG"

":T", "SPG_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of SPG"

":T", "SPG_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of SPG"

########################################################################
# section 7.7.3 Integer status setting (ING)
########################################################################

":T", "ING_ENUM8_SP"
"{
 (setVal)		<ENUMERATED8>,	  		#AC_NSG_M
}", "FC=SP of ING"

":T", "ING_INT_SP"
"{
 (setVal)		<INT32>,	  		#AC_NSG_M
}", "FC=SP of ING"

":T", "ING_ENUM8_SG"
"{
 (setVal)		<ENUMERATED8>,	  		#AC_SG_M
}", "FC=SG of ING"

":T", "ING_INT_SG"
"{
 (setVal)		<INT32>,	  		#AC_SG_M
}", "FC=SG of ING"

":T", "ING_ENUM8_SE"
"{
 (setVal)		<ENUMERATED8>,	  		#AC_SG_M
}", "FC=SE of ING"

":T", "ING_INT_SE"
"{
 (setVal)		<INT32>,	  		#AC_SG_M
}", "FC=SE of ING"

":T", "ING_ENUM8_CF"
"{
 (minVal) 		<ENUMERATED8>, 			#O
 (maxVal) 		<ENUMERATED8>, 			#O
 (stepSize) 		<INT32U>,			#O
}", "FC=CF of ING"

":T", "ING_INT_CF"
"{
 (minVal) 		<INT32>, 			#O
 (maxVal) 		<INT32>, 			#O
 (stepSize) 		<INT32U>,			#O
}", "FC=CF of ING"

":T", "ING_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of ING"

":T", "ING_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of ING"

########################################################################
# section 7.8.2 Analogue setting (ASG)
########################################################################

":T", "ASG_SP"
"{
 (setMag)		<AnalogueValue>,  		#AC_NSG_M
}", "FC=SP of ASG"

":T", "ASG_SG"
"{
 (setMag)		<AnalogueValue>,   		#AC_SG_M
}", "FC=SG of ASG"

":T", "ASG_SE"
"{
 (setMag)		<AnalogueValue>,   		#AC_SG_M
}", "FC=SE of ASG"

":T", "ASG_CF"
"{
 (units) 		<Unit>, 			#O
 (sVC) 			<ScaledValueConfig>, 		#AC_SCAV
 (minVal)  		<AnalogueValue>,  		#O
 (maxVal)  		<AnalogueValue>,  		#O
 (stepSize) 		<AnalogueValue>, 		#O
}", "FC=CF of ASG"

":T", "ASG_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of ASG"

":T", "ASG_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of ASG"

########################################################################
# section 7.8.3 Setting curve (CURVE)
########################################################################

":T", "CURVE_SP"
"{
 (setCharact)		<ENUMERATED8>,  		#AC_NSG_M
 (setParA)		<FLOAT32>,	  		#AC_NSG_O
 (setParB)		<FLOAT32>,	  		#AC_NSG_O
 (setParC)		<FLOAT32>,	  		#AC_NSG_O
 (setParD)		<FLOAT32>,	  		#AC_NSG_O
 (setParE)		<FLOAT32>,	  		#AC_NSG_O
 (setParF)		<FLOAT32>,	  		#AC_NSG_O
}", "FC=SP of CURVE"

":T", "CURVE_SG"
"{
 (setCharact)		<ENUMERATED8>,  		#AC_SG_M
 (setParA)		<FLOAT32>,	  		#AC_SG_O
 (setParB)		<FLOAT32>,	  		#AC_SG_O
 (setParC)		<FLOAT32>,	  		#AC_SG_O
 (setParD)		<FLOAT32>,	  		#AC_SG_O
 (setParE)		<FLOAT32>,	  		#AC_SG_O
 (setParF)		<FLOAT32>,	  		#AC_SG_O
}", "FC=SG of CURVE"

":T", "CURVE_SE"
"{
 (setCharact)		<ENUMERATED8>,  		#AC_SG_M
 (setParA)		<FLOAT32>,	  		#AC_SG_O
 (setParB)		<FLOAT32>,	  		#AC_SG_O
 (setParC)		<FLOAT32>,	  		#AC_SG_O
 (setParD)		<FLOAT32>,	  		#AC_SG_O
 (setParE)		<FLOAT32>,	  		#AC_SG_O
 (setParF)		<FLOAT32>,	  		#AC_SG_O
}", "FC=SE of CURVE"

":T", "CURVE_DC"
"{
 (d)			<VISIBLE_STRING255>,  		#O
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of CURVE"

":T", "CURVE_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of CURVE"

########################################################################
# section 7.9.2 Device name plate (DPL)
########################################################################

":T", "DPL_DC"
"{
 (vendor)		<VISIBLE_STRING255>,  		#M
 (hwRev)		<VISIBLE_STRING255>,  		#O
 (swRev)		<VISIBLE_STRING255>,  		#O
 (serNum)		<VISIBLE_STRING255>,  		#O
 (model)		<VISIBLE_STRING255>,  		#O
 (location)		<VISIBLE_STRING255>,  		#O
}", "FC=DC of DPL"

":T", "DPL_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of DPL"

########################################################################
# section 7.9.3 Logical Node name plate (LPL)
########################################################################

":T", "LPL_DC"
"{
 (vendor)		<VISIBLE_STRING255>,  		#M
 (swRev)		<VISIBLE_STRING255>,  		#M
 (d)			<VISIBLE_STRING255>,  		#M
 (dU)			<UNICODE_STRING255>,		#O
 (configRev)		<VISIBLE_STRING255>,  		#AC_LN0_M
}", "FC=DC of LPL"

":T", "LPL_EX"
"{
 (ldNs)			<VISIBLE_STRING255>,  	      	#AC_LN0_EX
 (lnNs)			<VISIBLE_STRING255>,  	      	#AC_DLD_M
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of LPL"

########################################################################
# section 7.9.4 Curve shape description (CSD)
########################################################################

#
# Set the upper bounds(numPts) of PointCSD based on hardware capability
#
":T", "PointCSD"     	"[16:<Point>]",  "ARRAY[0..numPts] OF Point"

":T", "CSD_DC"
"{
 (xUnit)		<Unit>, 	 		#M
 (xD)			<VISIBLE_STRING255>,  		#M
 (yUnit)		<Unit>, 	 		#M
 (yD)			<VISIBLE_STRING255>,  		#M
 (numPts) 		<INT16U>,	  		#M
 (crvPts) 		<PointCSD>,	  		#M
 (d)			<VISIBLE_STRING255>,  		#M
 (dU)			<UNICODE_STRING255>,		#O
}", "FC=DC of CSD"

":T", "CSD_EX"
"{
 (cdcNs)		<VISIBLE_STRING255>,  		#AC_DLNDA_M
 (cdcName) 		<VISIBLE_STRING255>,		#AC_DLNDA_M
 (dataNs) 		<VISIBLE_STRING255>,		#AC_DLN_M
}", "FC=EX of CSD"


########################################################################
# Buffered and unbuffered Report Control Blocks
#NOTE: component types with "RTYP_" prefix, are also used directly in reporting
#      code. It is CRITICAL that same type is used in both places.
########################################################################
":T","IEC_BRCB",
"{
 (RptID)		<RTYP_VSTR65>,                #m
 (RptEna)		<RTYP_BOOL>,               #m
 (DatSet)		<ObjectReference>,         #m
 (ConfRev)		<INT32U>,
 (OptFlds)		<RTYP_BVSTR10>,
 (BufTm)		<INT32U>,               #m
 (SqNum)		<INT16U>,               #m
 (TrgOps)		<RTYP_BVSTR6>,
 (IntgPd)		<INT32U>,                #m
 (GI)		<RTYP_BOOL>,
 (PurgeBuf)		<RTYP_BOOL>,
 (EntryID)		<RTYP_OSTR8>,
 (TimeofEntry)		<EntryTime>
}","IEC Buffered Report Control Block"

":T","IEC_URCB",
"{
 (RptID)		<RTYP_VSTR65>,                #m
 (RptEna)		<RTYP_BOOL>,               #m
 (Resv)		<RTYP_BOOL>,
 (DatSet)		<ObjectReference>,         #m
 (ConfRev)		<INT32U>,
 (OptFlds)		<RTYP_BVSTR10>,
 (BufTm)		<INT32U>,               #m
 (SqNum)		<INT8U>,               #m
 (TrgOps)		<RTYP_BVSTR6>,
 (IntgPd)		<INT32U>,                #m
 (GI)		<RTYP_BOOL>
}","IEC Unbuffered Report Control Block"

########################################################################
# Classes defined in IEC-61850-7-2
########################################################################

########################################################################
# section 13.2.1 of IEC-61850-7-2 Setting Group Control Block (SGCB)
########################################################################

":T", "SGCB"
"{
 (NumOfSG)		<INT8U>, 	 		#M
 (ActSG)		<INT8U>, 	 		#M
 (EditSG)		<INT8U>, 	 		#M
 (CnfEdit)		<BOOLEAN>,	  		#M
 (LActTim)		<TimeStamp>, 	 		#M
}", "SettingGroupControlBlock"
