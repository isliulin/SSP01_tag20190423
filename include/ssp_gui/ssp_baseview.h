/**
 *
 * 文 件 名 : ssp_baseview.h
 * 创建日期 : 2015-7-8 11:06
 * 作    者 : 邵凯田(skt001@163.com)
 * 修改日期 : $Date: $
 * 当前版本 : $Revision: $
 * 功能描述 : SSP图形人机对话程序（工作站）框架，功能窗口基础类
 * 修改记录 : 
 *            $Log: $
 *
 * Ver  Date        Author  Comments
 * ---  ----------  ------  -------------------------------------------
 * 001	2015-7-8	邵凯田　创建文件
 *
 **/

#ifndef __BASE_VIEW_H__
#define __BASE_VIEW_H__

#include <QtGui> 
#include "SLog.h"
#include "SList.h"
#include "SString.h"
#include "SApi.h"
#include "qt/SQt.h"
#include "SApplication.h"
#include "ssp_gui_inc.h"

#define C_TABLE_ROW_HEIGHT 22

//////////////////////////////////////////////////////////////////////////
// 名    称:  CBaseView
// 作    者:  邵凯田
// 创建时间:  2015-7-8 11:11
// 描    述:  各功能视图基类，所有功能窗口需要从此派生
//////////////////////////////////////////////////////////////////////////
class SSP_GUI_EXPORT CBaseView : public QWidget
{
	Q_OBJECT
public:
	CBaseView(QWidget *parent = 0);
	virtual ~CBaseView();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  代理消息处理接口，由派生类实现，处理函数必须尽量短小，快速返回，后台线程驱动，函数中不能调用任何界面元素
	// 作    者:  邵凯田
	// 创建时间:  2016-2-3 15:20
	// 参数说明:  @wMsgType表示消息类型
	//         :  @pMsgHead为消息头
	//         :  @sHeadStr消息头字符串
	//         :  @pBuffer为消息携带的二进制数据内容，NULL表示无二进制数据
	//         :  @iLength为二进制数据长度
	// 返 回 值:  true表示处理成功，false表示处理失败
	//////////////////////////////////////////////////////////////////////////
	virtual bool ProcessAgentMsg(WORD wMsgType,stuSpUnitAgentMsgHead *pMsgHead,SString &sHeadStr,BYTE* pBuffer=NULL,int iLength=0)
	{S_UNUSED(wMsgType);S_UNUSED(pMsgHead);S_UNUSED(sHeadStr);S_UNUSED(pBuffer);S_UNUSED(iLength);return false;};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  设置视图的扩展属性，用于向视图传递扩展，采用属性字符串方式：attr1=val1;attr2=val2;
	// 作    者:  邵凯田
	// 创建时间:  2015-7-15 17:25
	// 参数说明:  @sExtAttr为扩展属性字符串
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void SetExtAttribute(SString sExtAttr){S_UNUSED(sExtAttr);};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  当窗口准备显示前调用虚函数
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:11
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void OnPreShow(){};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  当窗口显示后调用虚函数
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:11
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void OnAftShow();

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  当窗口准备隐藏前调用虚函数
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:11
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void OnPreHide(){};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  当窗口隐藏后调用的虚函数
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:12
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void OnAftHide(){};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  强制刷新窗口，当数据库改变，或通过界面框架点击刷新时触发
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:12
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	virtual void OnRefresh(){};

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  一般命令虚函数，由派生类重载后进行命令响应
	// 作    者:  邵凯田
	// 创建时间:  2017-8-8 14:02
	// 参数说明:  @sCmd表示命令字符串，格式不作要求，由应用约定
	//         :  @sResutl表示命令执行结果字符串，格式也不作要求
	// 返 回 值:  int，由应用约定
	//////////////////////////////////////////////////////////////////////////
	virtual int OnCommand(SString sCmd,SString &sResult){S_UNUSED(sCmd);S_UNUSED(sResult);return 0;};

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置提示文本
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:12
	// 参数说明:  @tip为提示文本
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	void SetTip(SString tip);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  刷新全部已经打开的视图
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	void RefreshAllView();

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  跳转到指定的功能点窗口
	// 作    者:  邵凯田
	// 创建时间:  2015-8-5 14:35
	// 参数说明:  @sFunKey为功能点名称
	// 返 回 值:  true/false
	//////////////////////////////////////////////////////////////////////////
	bool GotoFunPoint(SString sFunKey);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设备登录用户，并修改登录时间为当前
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  
	// 返 回 值:  
	//////////////////////////////////////////////////////////////////////////
	void SetLogin(SString user);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前登录用户
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  
	// 返 回 值:  
	//////////////////////////////////////////////////////////////////////////
	SString GetLoginUser();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  检查当前用户的指定功能点权限，未登录时要先登录
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  
	// 返 回 值:  true表示允许，false表示拒绝
	//////////////////////////////////////////////////////////////////////////
	bool CheckThisUserGrant(SString sFunCode);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前登录时间
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  
	// 返 回 值:  
	//////////////////////////////////////////////////////////////////////////
	time_t GetLoginTime();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置功能代码
	// 作    者:  邵凯田
	// 创建时间:  2015-7-8 11:13
	// 参数说明:  @funcode表示当前窗口对应的功能代码
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	inline void SetFunCode(SString funcode){m_sFunCode = funcode;};

public slots:
	void slotGotoFunPoint();

public:
	int m_iWndSn;//组态窗口序号
	int m_iLastWndSn;//上一次窗口序号
	int m_iRefreshSec;//自动刷新时间间隔，0表示不自动刷新

private:
	SString m_sFunCode;//用户权限验证的功能项代码，空表示不需要权限认证
};

#endif // UIFRAME_H
